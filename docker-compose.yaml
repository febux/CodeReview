version: '3.8'

x-common-config: &common-config
  APPLICATION_ENV__LOCAL: 'local'
  DEBUG: '1'
  SECRET_KEY: 'dbaa1_i7%*3r9-=z-+_mz4r-!qeed@(-a_r(g@k8jo8y3r27%m'
  DJANGO_ALLOWED_HOSTS: "localhost 127.0.0.1 [::1]"

x-redis-config: &redis-config
  REDIS_HOST: 'redis'
  REDIS_PORT: 6379
  REDIS_PASSWORD: 'eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81'

x-db-config: &db-config
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_PORT: 5432
  POSTGRES_DB: main_db

services:
  code_review__web:
    build:
      context: "."
      dockerfile: "srv/code-review--web/Dockerfile"
    command: "python manage.py runserver 0.0.0.0:8000"
    restart: 'no'
    networks:
      - postgres
      - redis
    volumes:
      - ./src:/docker_app/src
    ports:
      - "8000:8000"
    environment:
      POSTGRES_HOST: "code_review__db"
      <<: *common-config
      <<: *db-config
    depends_on:
      - code_review__redis
      - code_review__db

  code_review__db:
    image: postgres:14-alpine
    restart: always
    networks:
      - postgres
    ports:
      - "5432:5432"
    volumes:
      - data:/var/lib/postgresql/data
    environment:
      <<: *db-config

  code_review__redis:
    image: redis:6.2-alpine
    restart: always
    networks:
      - redis
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - cache:/data

#  code_review__celery:
#    build: ./project
#    command: celery -A core worker -l info
#    volumes:
#      - ./src:/docker_app/src
#    environment:
#      <<: *common-config
#    depends_on:
#      - code_review__redis
#
#  code_review__celery_beat:
#    build: ./project
#    command: celery -A core beat -l info
#    volumes:
#      - ./src:/docker_app/src
#    environment:
#      <<: *common-config
#    depends_on:
#      - code_review__redis


volumes:
  cache:
    driver: local
  data:

networks:
  postgres:
    driver: bridge
  redis:
    driver: bridge